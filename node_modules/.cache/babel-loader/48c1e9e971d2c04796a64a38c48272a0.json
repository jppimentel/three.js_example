{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o Paulo Pimentel\\\\Documents\\\\Projetos JS\\\\three_example\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport * as THREE from \"three\";\n\nfunction App() {\n  // === THREE.JS CODE START ===\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera(100, window.innerWidth / window.innerHeight, 0.1, 1000);\n  var renderer = new THREE.WebGLRenderer(); //renderer.setSize( window.innerWidth, window.innerHeight );\n\n  renderer.setSize(550, 550);\n  document.body.appendChild(renderer.domElement); //scene.background = new THREE.Color(0x0583F2);\n\n  {\n    var planeSize = 40;\n    var loader = new THREE.TextureLoader();\n    var texture = loader.load('https://threejsfundamentals.org/threejs/resources/images/checker.png');\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.magFilter = THREE.NearestFilter;\n    var repeats = planeSize / 2;\n    texture.repeat.set(repeats, repeats);\n    var planeGeo = new THREE.PlaneBufferGeometry(planeSize, planeSize);\n    var planeMat = new THREE.MeshPhongMaterial({\n      map: texture,\n      side: THREE.DoubleSide\n    });\n    var mesh = new THREE.Mesh(planeGeo, planeMat);\n    mesh.rotation.x = Math.PI * -.5;\n    scene.add(mesh);\n  }\n  var geometry = new THREE.BoxGeometry(1, 1, 1);\n  var material = new THREE.MeshBasicMaterial({\n    color: 0x33FAFF,\n    wireframe: true\n  });\n  var cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n  camera.position.z = 5;\n  var geometry_tree1 = new THREE.ConeBufferGeometry(0.5, 1, 16);\n  var geometry_tree2 = new THREE.ConeBufferGeometry(0.5, 2, 16);\n  var geometry_tree3 = new THREE.ConeBufferGeometry(0.5, 1.5, 16);\n  var material_green1 = new THREE.MeshBasicMaterial({\n    color: 0x184C25\n  });\n  var material_green2 = new THREE.MeshBasicMaterial({\n    color: 0x287438\n  });\n  var material_green3 = new THREE.MeshBasicMaterial({\n    color: 0x3BB358\n  });\n  var material_green4 = new THREE.MeshBasicMaterial({\n    color: 0x216632\n  });\n  var tree1 = new THREE.Mesh(geometry_tree1, material_green1);\n  tree1.position.set(2, 0, -1);\n  scene.add(tree1);\n  var tree2 = new THREE.Mesh(geometry_tree1, material_green2);\n  tree2.position.set(-4, 0, -1);\n  scene.add(tree2);\n  var tree3 = new THREE.Mesh(geometry_tree1, material_green3);\n  tree3.position.set(-5, -1, -1);\n  scene.add(tree3);\n  var tree4 = new THREE.Mesh(geometry_tree1, material_green4);\n  tree4.position.set(-5, -3, -1);\n  scene.add(tree4);\n  var tree5 = new THREE.Mesh(geometry_tree2, material_green3);\n  tree5.position.set(-6, 0, -1);\n  scene.add(tree5);\n  var tree6 = new THREE.Mesh(geometry_tree3, material_green1);\n  tree6.position.set(-4, -2, -1);\n  scene.add(tree6);\n\n  var animate = function animate() {\n    requestAnimationFrame(animate);\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.001; //cube.position.x += 0.01;\n\n    renderer.render(scene, camera);\n  };\n\n  animate(); // === THREE.JS EXAMPLE CODE END ===\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 18\n    }\n  }, \"Cubo\"));\n}\n\nexport default App; // return (<div>\n//     <h1>Funcionando</h1>\n// </div>)","map":{"version":3,"sources":["C:/Users/Jo√£o Paulo Pimentel/Documents/Projetos JS/three_example/src/components/App.jsx"],"names":["React","useState","ReactDom","THREE","App","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","planeSize","loader","TextureLoader","texture","load","wrapS","RepeatWrapping","wrapT","magFilter","NearestFilter","repeats","repeat","set","planeGeo","PlaneBufferGeometry","planeMat","MeshPhongMaterial","map","side","DoubleSide","mesh","Mesh","rotation","x","Math","PI","add","geometry","BoxGeometry","material","MeshBasicMaterial","color","wireframe","cube","position","z","geometry_tree1","ConeBufferGeometry","geometry_tree2","geometry_tree3","material_green1","material_green2","material_green3","material_green4","tree1","tree2","tree3","tree4","tree5","tree6","animate","requestAnimationFrame","y","render"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport * as THREE from \"three\";\r\n\r\nfunction App(){\r\n    // === THREE.JS CODE START ===\r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera( 100, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n    var renderer = new THREE.WebGLRenderer();\r\n    \r\n    //renderer.setSize( window.innerWidth, window.innerHeight );\r\n    renderer.setSize( 550, 550 );\r\n    document.body.appendChild( renderer.domElement );\r\n    \r\n    //scene.background = new THREE.Color(0x0583F2);\r\n    {\r\n        const planeSize = 40;\r\n    \r\n        const loader = new THREE.TextureLoader();\r\n        const texture = loader.load('https://threejsfundamentals.org/threejs/resources/images/checker.png');\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.magFilter = THREE.NearestFilter;\r\n        const repeats = planeSize / 2;\r\n        texture.repeat.set(repeats, repeats);\r\n    \r\n        const planeGeo = new THREE.PlaneBufferGeometry(planeSize, planeSize);\r\n        const planeMat = new THREE.MeshPhongMaterial({\r\n          map: texture,\r\n          side: THREE.DoubleSide,\r\n        });\r\n        const mesh = new THREE.Mesh(planeGeo, planeMat);\r\n        mesh.rotation.x = Math.PI * -.5;\r\n        scene.add(mesh);\r\n      }\r\n\r\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n    var material = new THREE.MeshBasicMaterial( { color: 0x33FAFF, wireframe: true } );\r\n    var cube = new THREE.Mesh( geometry, material );\r\n    scene.add( cube );\r\n    camera.position.z = 5;\r\n    \r\n\r\n    var geometry_tree1 = new THREE.ConeBufferGeometry( 0.5, 1, 16 );\r\n    var geometry_tree2 = new THREE.ConeBufferGeometry( 0.5, 2, 16 );\r\n    var geometry_tree3 = new THREE.ConeBufferGeometry( 0.5, 1.5, 16 );\r\n    var material_green1 = new THREE.MeshBasicMaterial( { color: 0x184C25} );\r\n    var material_green2 = new THREE.MeshBasicMaterial( { color: 0x287438} );\r\n    var material_green3 = new THREE.MeshBasicMaterial( { color: 0x3BB358} );\r\n    var material_green4 = new THREE.MeshBasicMaterial( { color: 0x216632} );\r\n\r\n    var tree1 = new THREE.Mesh( geometry_tree1, material_green1 );\r\n    tree1.position.set(2, 0, -1)\r\n    scene.add( tree1 );\r\n\r\n    var tree2 = new THREE.Mesh( geometry_tree1, material_green2 );\r\n    tree2.position.set(-4, 0, -1)\r\n    scene.add( tree2 );\r\n    var tree3 = new THREE.Mesh( geometry_tree1, material_green3 );\r\n    tree3.position.set(-5, -1, -1)\r\n    scene.add( tree3 );\r\n    var tree4 = new THREE.Mesh( geometry_tree1, material_green4 );\r\n    tree4.position.set(-5, -3, -1)\r\n    scene.add( tree4 );\r\n    var tree5 = new THREE.Mesh( geometry_tree2, material_green3 );\r\n    tree5.position.set(-6, 0, -1)\r\n    scene.add( tree5 );\r\n    var tree6 = new THREE.Mesh( geometry_tree3, material_green1 );\r\n    tree6.position.set(-4, -2, -1)\r\n    scene.add( tree6 );\r\n\r\n    var animate = function () {\r\n      requestAnimationFrame( animate );\r\n      cube.rotation.x += 0.01;\r\n      cube.rotation.y += 0.001;\r\n\r\n      //cube.position.x += 0.01;\r\n      renderer.render( scene, camera );\r\n    };\r\n    animate();\r\n    // === THREE.JS EXAMPLE CODE END ===\r\n    \r\n    return (<div><h1>Cubo</h1></div>)\r\n}\r\n\r\nexport default App;\r\n// return (<div>\r\n//     <h1>Funcionando</h1>\r\n// </div>)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o Paulo Pimentel\\\\Documents\\\\Projetos JS\\\\three_example\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport * as THREE from \"three\";\nimport { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\nimport OrbitControls from \"three-orbitcontrols\"; //import {ufo} from '../images/ufo.obj';\n//import { OBJLoader2 } from 'three/examples/jsm/loaders/OBJLoader2.js';\n\nfunction App() {\n  var _this = this;\n\n  // === THREE.JS CODE START ===\n  console.log(\"test\");\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera(100, window.innerWidth / window.innerHeight, 0.1, 1000);\n  var renderer = new THREE.WebGLRenderer(); //renderer.setSize( window.innerWidth, window.innerHeight );\n\n  renderer.setSize(550, 550);\n  document.body.appendChild(renderer.domElement);\n  scene.background = new THREE.Color(0x649DC1);\n  var geometry = new THREE.BoxGeometry(1, 1, 1);\n  var material = new THREE.MeshBasicMaterial({\n    color: 0x33FAFF,\n    wireframe: true\n  });\n  var cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n  camera.position.z = 8;\n  camera.position.y = 2; // var geometry_tree1 = new THREE.ConeBufferGeometry( 0.5, 1, 16 );\n  // var geometry_tree2 = new THREE.ConeBufferGeometry( 0.5, 2, 16 );\n  // var geometry_tree3 = new THREE.ConeBufferGeometry( 0.5, 1.5, 16 );\n  // var material_green1 = new THREE.MeshBasicMaterial( { color: 0x184C25} );\n  // var material_green2 = new THREE.MeshBasicMaterial( { color: 0x287438} );\n  // var material_green3 = new THREE.MeshBasicMaterial( { color: 0x3BB358} );\n  // var material_green4 = new THREE.MeshBasicMaterial( { color: 0x216632} );\n  // var tree1 = new THREE.Mesh( geometry_tree1, material_green1 );\n  // tree1.position.set(2, 0, 1)\n  // scene.add( tree1 );\n  // var tree2 = new THREE.Mesh( geometry_tree1, material_green2 );\n  // tree2.position.set(-3, 0, 2)\n  // scene.add( tree2 );\n  // var tree3 = new THREE.Mesh( geometry_tree1, material_green3 );\n  // tree3.position.set(-5, 0, -1)\n  // scene.add( tree3 );\n  // var tree4 = new THREE.Mesh( geometry_tree1, material_green4 );\n  // tree4.position.set(-5, 0, -2)\n  // scene.add( tree4 );\n  // var tree5 = new THREE.Mesh( geometry_tree2, material_green3 );\n  // tree5.position.set(-6, 0, -1)\n  // scene.add( tree5 );\n  // var tree6 = new THREE.Mesh( geometry_tree3, material_green1 );\n  // tree6.position.set(-4, 0, -1)\n  // scene.add( tree6 );\n  // var tree7 = new THREE.Mesh( geometry_tree1, material_green4 );\n  // tree7.position.set(4, 0, 2)\n  // scene.add( tree7 );\n  // var tree8 = new THREE.Mesh( geometry_tree2, material_green2 );\n  // tree8.position.set(2.5, 0, 3)\n  // scene.add( tree8 );\n  // var tree9 = new THREE.Mesh( geometry_tree3, material_green1 );\n  // tree9.position.set(2, 0, 3)\n  // scene.add( tree9 );\n  // var geometry_plane = new THREE.BoxGeometry( 40, 0.1, 40);  \n  // var texture_plane = THREE.ImageUtils.loadTexture('../public/images/snow.jpg', {}, function() {\n  // renderer.render(scene, camera);\n  // })\n  // //var material_plane = new THREE.MeshBasicMaterial({map: texture_plane, transparent: true })\n  // var material_plane = new THREE.MeshBasicMaterial({ color: 0xE3EAF4})\n  // var plane = new THREE.Mesh(geometry_plane, material_plane );\n  // plane.position.set(0, -1, 0)\n  // scene.add( plane );\n\n  var objLoader = new OBJLoader();\n  objLoader.load(\"../images/ufo.obj\", function (object) {\n    _this.freedomMesh = object;\n\n    _this.freedomMesh.position.setY(3); //or  this\n\n\n    _this.freedomMesh.scale.set(0.02, 0.02, 0.02);\n\n    _this.scene.add(_this.freedomMesh);\n  }, function (xhr) {\n    console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n  }, // called when loading has errors\n  function (error) {\n    console.log(\"An error happened\" + error);\n  });\n\n  var animate = function animate() {\n    requestAnimationFrame(animate);\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.001; //cube.position.x += 0.01;\n\n    renderer.render(scene, camera);\n  };\n\n  animate(); // === THREE.JS EXAMPLE CODE END ===\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 18\n    }\n  }, \"Cubo\"));\n}\n\nexport default App; // return (<div>\n//     <h1>Funcionando</h1>\n// </div>)","map":{"version":3,"sources":["C:/Users/Jo√£o Paulo Pimentel/Documents/Projetos JS/three_example/src/components/App.jsx"],"names":["React","useState","ReactDom","THREE","MTLLoader","OBJLoader","OrbitControls","App","console","log","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","background","Color","geometry","BoxGeometry","material","MeshBasicMaterial","color","wireframe","cube","Mesh","add","position","z","y","objLoader","load","object","freedomMesh","setY","scale","set","xhr","loaded","total","error","animate","requestAnimationFrame","rotation","x","render"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport * as THREE from \"three\";\r\nimport { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\r\nimport OrbitControls from \"three-orbitcontrols\";\r\n//import {ufo} from '../images/ufo.obj';\r\n//import { OBJLoader2 } from 'three/examples/jsm/loaders/OBJLoader2.js';\r\n\r\nfunction App(){\r\n    // === THREE.JS CODE START ===\r\n    console.log(\"test\");\r\n\r\n    var scene = new THREE.Scene();\r\n    var camera = new THREE.PerspectiveCamera( 100, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n    var renderer = new THREE.WebGLRenderer();\r\n    \r\n    //renderer.setSize( window.innerWidth, window.innerHeight );\r\n    renderer.setSize( 550, 550 );\r\n    document.body.appendChild( renderer.domElement );\r\n    \r\n    scene.background = new THREE.Color(0x649DC1);\r\n    \r\n\r\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n    var material = new THREE.MeshBasicMaterial( { color: 0x33FAFF, wireframe: true } );\r\n    var cube = new THREE.Mesh( geometry, material );\r\n    scene.add( cube );\r\n    camera.position.z = 8;\r\n    camera.position.y = 2;\r\n    \r\n\r\n    // var geometry_tree1 = new THREE.ConeBufferGeometry( 0.5, 1, 16 );\r\n    // var geometry_tree2 = new THREE.ConeBufferGeometry( 0.5, 2, 16 );\r\n    // var geometry_tree3 = new THREE.ConeBufferGeometry( 0.5, 1.5, 16 );\r\n    // var material_green1 = new THREE.MeshBasicMaterial( { color: 0x184C25} );\r\n    // var material_green2 = new THREE.MeshBasicMaterial( { color: 0x287438} );\r\n    // var material_green3 = new THREE.MeshBasicMaterial( { color: 0x3BB358} );\r\n    // var material_green4 = new THREE.MeshBasicMaterial( { color: 0x216632} );\r\n\r\n    // var tree1 = new THREE.Mesh( geometry_tree1, material_green1 );\r\n    // tree1.position.set(2, 0, 1)\r\n    // scene.add( tree1 );\r\n    // var tree2 = new THREE.Mesh( geometry_tree1, material_green2 );\r\n    // tree2.position.set(-3, 0, 2)\r\n    // scene.add( tree2 );\r\n    // var tree3 = new THREE.Mesh( geometry_tree1, material_green3 );\r\n    // tree3.position.set(-5, 0, -1)\r\n    // scene.add( tree3 );\r\n    // var tree4 = new THREE.Mesh( geometry_tree1, material_green4 );\r\n    // tree4.position.set(-5, 0, -2)\r\n    // scene.add( tree4 );\r\n    // var tree5 = new THREE.Mesh( geometry_tree2, material_green3 );\r\n    // tree5.position.set(-6, 0, -1)\r\n    // scene.add( tree5 );\r\n    // var tree6 = new THREE.Mesh( geometry_tree3, material_green1 );\r\n    // tree6.position.set(-4, 0, -1)\r\n    // scene.add( tree6 );\r\n\r\n    // var tree7 = new THREE.Mesh( geometry_tree1, material_green4 );\r\n    // tree7.position.set(4, 0, 2)\r\n    // scene.add( tree7 );\r\n    // var tree8 = new THREE.Mesh( geometry_tree2, material_green2 );\r\n    // tree8.position.set(2.5, 0, 3)\r\n    // scene.add( tree8 );\r\n    // var tree9 = new THREE.Mesh( geometry_tree3, material_green1 );\r\n    // tree9.position.set(2, 0, 3)\r\n    // scene.add( tree9 );\r\n\r\n    // var geometry_plane = new THREE.BoxGeometry( 40, 0.1, 40);  \r\n    // var texture_plane = THREE.ImageUtils.loadTexture('../public/images/snow.jpg', {}, function() {\r\n    // renderer.render(scene, camera);\r\n    // })\r\n    // //var material_plane = new THREE.MeshBasicMaterial({map: texture_plane, transparent: true })\r\n    // var material_plane = new THREE.MeshBasicMaterial({ color: 0xE3EAF4})\r\n    // var plane = new THREE.Mesh(geometry_plane, material_plane );\r\n    // plane.position.set(0, -1, 0)\r\n    // scene.add( plane );\r\n\r\n    \r\n    var objLoader = new OBJLoader();\r\n\r\n    objLoader.load(\"../images/ufo.obj\",\r\n        object => {\r\n        this.freedomMesh = object;\r\n        this.freedomMesh.position.setY(3); //or  this\r\n        this.freedomMesh.scale.set(0.02, 0.02, 0.02);\r\n        this.scene.add(this.freedomMesh);\r\n        },\r\n        xhr => {\r\n        console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\r\n        },\r\n        // called when loading has errors\r\n        error => {\r\n        console.log(\"An error happened\" + error);\r\n    });\r\n\r\n\r\n    var animate = function () {\r\n      requestAnimationFrame( animate );\r\n      cube.rotation.x += 0.01;\r\n      cube.rotation.y += 0.001;\r\n\r\n      //cube.position.x += 0.01;\r\n      renderer.render( scene, camera );\r\n    };\r\n    animate();\r\n    // === THREE.JS EXAMPLE CODE END ===\r\n    \r\n    return (<div><h1>Cubo</h1></div>)\r\n}\r\n\r\nexport default App;\r\n// return (<div>\r\n//     <h1>Funcionando</h1>\r\n// </div>)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}